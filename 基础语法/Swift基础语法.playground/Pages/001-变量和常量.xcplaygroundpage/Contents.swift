import Foundation

/*:
 # 常量和变量
 ## 定义
 * `let` 定义常量，一经赋值不允许再修改
 * `var` 定义变量，赋值之后仍然可以修改
 * 细节
   * 使用 `: 类型`，仅仅只定义类型
   * 常量有一次设置的机会
   * 应该尽量先选择常量，只有在必须修改时，才需要修改为 `var`
 */

// 定义常量并且直接设置数值
let x: Int = 10
// 常量数值一经设置，不能修改，以下代码会报错
// x = 30

let y: Int
// 常量有一次设置的机会，以下代码没有问题，因为 `y` 还没有被设置数值
y = 10

// 一旦设置之后，则不能再次修改，以下代码会报错，因为 `y` 已经被设置了数值
// y = 50

print(x + y)

// 变量设置数值之后，可以继续修改数值
var z: Int
z = 100
z = 200

print(x + y + z)

/*:
 ## 自动推导
 * Swift 能够根据右边的代码，推导出变量的准确类型
 * 只有相同类型的值才能够进行运算
 
 > 注意：Swift 对数据类型要求异常严格，任何时候，都不会做隐式转换
 */
// 整数默认的类型是 Int
let intValue = 200
// 小数的默认类型是 Double
let doubleValue = 10.5

// 如果要对不同类型的数据进行计算，必须要显式的转换
print(intValue + Int(doubleValue))
print(Double(intValue) + doubleValue)

//: 有关本示例的许可信息，请参阅：[许可协议](License)

